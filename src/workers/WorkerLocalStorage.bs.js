// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var LocalStorage = require("../ffi/LocalStorage.bs.js");

function encodeItems(items) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "blockstack",
                Json_encode.nullable((function (prim) {
                        return prim;
                      }), items[/* blockstack */0])
              ],
              /* :: */[
                /* tuple */[
                  "blockstackGaiaHubConfig",
                  Json_encode.nullable((function (prim) {
                          return prim;
                        }), items[/* blockstackGaiaHubConfig */1])
                ],
                /* :: */[
                  /* tuple */[
                    "blockstackTransitPrivateKey",
                    Json_encode.nullable((function (prim) {
                            return prim;
                          }), items[/* blockstackTransitPrivateKey */2])
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decodeItems(raw) {
  return /* record */[
          /* blockstack */Json_decode.field("blockstack", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), raw),
          /* blockstackGaiaHubConfig */Json_decode.field("blockstackGaiaHubConfig", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), raw),
          /* blockstackTransitPrivateKey */Json_decode.field("blockstackTransitPrivateKey", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), raw)
        ];
}

var blockstackKey = "blockstack";

var gaiaHubKey = "blockstack-gaia-hub-config";

var transitPrivKey = "blockstack-transit-private-key";

function readBlockstackItemsFromStorage(param) {
  return /* record */[
          /* blockstack */Caml_option.null_to_opt(localStorage.getItem(blockstackKey)),
          /* blockstackGaiaHubConfig */Caml_option.null_to_opt(localStorage.getItem(gaiaHubKey)),
          /* blockstackTransitPrivateKey */Caml_option.null_to_opt(localStorage.getItem(transitPrivKey))
        ];
}

function setBlockstackItems(param) {
  var blockstackTransitPrivateKey = param[/* blockstackTransitPrivateKey */2];
  var blockstackGaiaHubConfig = param[/* blockstackGaiaHubConfig */1];
  var blockstack = param[/* blockstack */0];
  if (blockstack !== undefined) {
    LocalStorage.setItem(blockstackKey, blockstack);
  } else {
    LocalStorage.removeItem(blockstackKey);
  }
  if (blockstackGaiaHubConfig !== undefined) {
    LocalStorage.setItem(gaiaHubKey, blockstackGaiaHubConfig);
  } else {
    LocalStorage.removeItem(gaiaHubKey);
  }
  if (blockstackTransitPrivateKey !== undefined) {
    return LocalStorage.setItem(transitPrivKey, blockstackTransitPrivateKey);
  } else {
    return LocalStorage.removeItem(transitPrivKey);
  }
}

var L = 0;

exports.encodeItems = encodeItems;
exports.decodeItems = decodeItems;
exports.L = L;
exports.blockstackKey = blockstackKey;
exports.gaiaHubKey = gaiaHubKey;
exports.transitPrivKey = transitPrivKey;
exports.readBlockstackItemsFromStorage = readBlockstackItemsFromStorage;
exports.setBlockstackItems = setBlockstackItems;
/* No side effect */
