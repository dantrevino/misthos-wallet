// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var BTC = require("../wallet/BTC.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Utils = require("../../utils/Utils.bs.js");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Policy = require("../Policy.bs.js");
var Address = require("../wallet/Address.bs.js");
var Network = require("../wallet/Network.bs.js");
var Belt_Set = require("bs-platform/lib/js/belt_Set.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var EventTypes = require("./EventTypes.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var WalletTypes = require("../wallet/WalletTypes.bs.js");
var BitcoinjsLib = require("bitcoinjs-lib");
var PrimitiveTypes = require("../PrimitiveTypes.bs.js");
var AccountKeyChain = require("../wallet/AccountKeyChain.bs.js");
var AccountSettings = require("../wallet/AccountSettings.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var CustodianKeyChain = require("../wallet/CustodianKeyChain.bs.js");
var PayoutTransaction = require("../wallet/PayoutTransaction.bs.js");

function make(ventureName, creatorId, creatorPubKey, defaultAccountSettings, metaPolicy, initialPolicies, network) {
  return /* record */[
          /* ventureId */PrimitiveTypes.VentureId[/* make */10](/* () */0),
          /* ventureName */ventureName,
          /* creatorId */creatorId,
          /* creatorPubKey */creatorPubKey,
          /* defaultAccountSettings */defaultAccountSettings,
          /* metaPolicy */metaPolicy,
          /* initialPolicies */initialPolicies,
          /* systemIssuer */BitcoinjsLib.ECPair.makeRandom(),
          /* network */network
        ];
}

function encode($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "VentureCreated"
              ],
              /* :: */[
                /* tuple */[
                  "ventureId",
                  PrimitiveTypes.VentureId[/* encode */2]($$event[/* ventureId */0])
                ],
                /* :: */[
                  /* tuple */[
                    "ventureName",
                    $$event[/* ventureName */1]
                  ],
                  /* :: */[
                    /* tuple */[
                      "creatorId",
                      PrimitiveTypes.UserId[/* encode */2]($$event[/* creatorId */2])
                    ],
                    /* :: */[
                      /* tuple */[
                        "creatorPubKey",
                        $$event[/* creatorPubKey */3]
                      ],
                      /* :: */[
                        /* tuple */[
                          "defaultAccountSettings",
                          Json_encode.nullable(AccountSettings.encode, $$event[/* defaultAccountSettings */4])
                        ],
                        /* :: */[
                          /* tuple */[
                            "initialPolicies",
                            Json_encode.nullable(Policy.encodeInitialPolicies, $$event[/* initialPolicies */6])
                          ],
                          /* :: */[
                            /* tuple */[
                              "metaPolicy",
                              Policy.encode($$event[/* metaPolicy */5])
                            ],
                            /* :: */[
                              /* tuple */[
                                "systemIssuer",
                                $$event[/* systemIssuer */7].toWIF()
                              ],
                              /* :: */[
                                /* tuple */[
                                  "network",
                                  Network.encode($$event[/* network */8])
                                ],
                                /* [] */0
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function decode(raw) {
  return /* record */[
          /* ventureId */Json_decode.field("ventureId", PrimitiveTypes.VentureId[/* decode */3], raw),
          /* ventureName */Json_decode.field("ventureName", Json_decode.string, raw),
          /* creatorId */Json_decode.field("creatorId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* creatorPubKey */Json_decode.field("creatorPubKey", Json_decode.string, raw),
          /* defaultAccountSettings */Utils.maybeField("defaultAccountSettings", AccountSettings.decode)(raw),
          /* metaPolicy */Json_decode.field("metaPolicy", Policy.decode, raw),
          /* initialPolicies */Utils.maybeField("initialPolicies", Policy.decodeInitialPolicies)(raw),
          /* systemIssuer */BitcoinjsLib.ECPair.fromWIF(Json_decode.field("systemIssuer", Json_decode.string, raw)),
          /* network */Json_decode.field("network", Network.decode, raw)
        ];
}

var VentureCreated = /* module */[
  /* make */make,
  /* encode */encode,
  /* decode */decode
];

function encode$1($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "id",
                PrimitiveTypes.UserId[/* encode */2]($$event[/* id */1])
              ],
              /* :: */[
                /* tuple */[
                  "pubKey",
                  Json_encode.nullable((function (prim) {
                          return prim;
                        }), $$event[/* pubKey */2])
                ],
                /* :: */[
                  /* tuple */[
                    "lastPartnerRemovalProcess",
                    Json_encode.nullable(PrimitiveTypes.ProcessId[/* encode */2], $$event[/* lastPartnerRemovalProcess */0])
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decode$1(raw) {
  var partial_arg = PrimitiveTypes.ProcessId[/* decode */3];
  return /* record */[
          /* lastPartnerRemovalProcess */Json_decode.field("lastPartnerRemovalProcess", (function (param) {
                  return Json_decode.optional(partial_arg, param);
                }), raw),
          /* id */Json_decode.field("id", PrimitiveTypes.UserId[/* decode */3], raw),
          /* pubKey */Json_decode.field("pubKey", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), raw)
        ];
}

var Data = /* module */[
  /* encode */encode$1,
  /* decode */decode$1
];

var include = EventTypes.makeProcess("Partner")(Data);

var Proposed = include[2];

var Rejected = include[3];

var Endorsed = include[4];

var Accepted = include[5];

var Denied = include[6];

function encode$2($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "id",
                PrimitiveTypes.UserId[/* encode */2]($$event[/* id */0])
              ],
              /* :: */[
                /* tuple */[
                  "lastPartnerProcess",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* lastPartnerProcess */1])
                ],
                /* [] */0
              ]
            ]);
}

function decode$2(raw) {
  return /* record */[
          /* id */Json_decode.field("id", PrimitiveTypes.UserId[/* decode */3], raw),
          /* lastPartnerProcess */Json_decode.field("lastPartnerProcess", PrimitiveTypes.ProcessId[/* decode */3], raw)
        ];
}

var Data$1 = /* module */[
  /* encode */encode$2,
  /* decode */decode$2
];

var include$1 = EventTypes.makeProcess("PartnerRemoval")(Data$1);

var Proposed$1 = include$1[2];

var Rejected$1 = include$1[3];

var Endorsed$1 = include$1[4];

var Accepted$1 = include$1[5];

var Denied$1 = include$1[6];

var Removal_001 = /* processName */include$1[0];

var Removal_002 = /* dataEq */include$1[1];

var Removal_008 = /* Aborted */include$1[7];

var Removal = /* module */[
  /* Data */Data$1,
  Removal_001,
  Removal_002,
  /* Proposed */Proposed$1,
  /* Rejected */Rejected$1,
  /* Endorsed */Endorsed$1,
  /* Accepted */Accepted$1,
  /* Denied */Denied$1,
  Removal_008
];

function make$1(partnerId, pubKey) {
  return /* record */[
          /* partnerId */partnerId,
          /* pubKey */pubKey
        ];
}

function encode$3($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "PartnerPubKeyAdded"
              ],
              /* :: */[
                /* tuple */[
                  "partnerId",
                  PrimitiveTypes.UserId[/* encode */2]($$event[/* partnerId */0])
                ],
                /* :: */[
                  /* tuple */[
                    "pubKey",
                    $$event[/* pubKey */1]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decode$3(raw) {
  return /* record */[
          /* partnerId */Json_decode.field("partnerId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* pubKey */Json_decode.field("pubKey", Json_decode.string, raw)
        ];
}

var PubKeyAdded = /* module */[
  /* make */make$1,
  /* encode */encode$3,
  /* decode */decode$3
];

var Partner_001 = /* processName */include[0];

var Partner_002 = /* dataEq */include[1];

var Partner_008 = /* Aborted */include[7];

var Partner = /* module */[
  /* Data */Data,
  Partner_001,
  Partner_002,
  /* Proposed */Proposed,
  /* Rejected */Rejected,
  /* Endorsed */Endorsed,
  /* Accepted */Accepted,
  /* Denied */Denied,
  Partner_008,
  /* Removal */Removal,
  /* PubKeyAdded */PubKeyAdded
];

function encode$4($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "accountIdx",
                WalletTypes.AccountIndex[/* encode */4]($$event[/* accountIdx */0])
              ],
              /* :: */[
                /* tuple */[
                  "settings",
                  Json_encode.nullable(AccountSettings.encode, $$event[/* settings */1])
                ],
                /* :: */[
                  /* tuple */[
                    "name",
                    $$event[/* name */2]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decode$4(raw) {
  return /* record */[
          /* accountIdx */Json_decode.field("accountIdx", WalletTypes.AccountIndex[/* decode */5], raw),
          /* settings */Utils.maybeField("settings", AccountSettings.decode)(raw),
          /* name */Json_decode.field("name", Json_decode.string, raw)
        ];
}

var Data$2 = /* module */[
  /* encode */encode$4,
  /* decode */decode$4
];

var include$2 = EventTypes.makeProcess("AccountCreation")(Data$2);

var Proposed$2 = include$2[2];

var Rejected$2 = include$2[3];

var Endorsed$2 = include$2[4];

var Accepted$2 = include$2[5];

var AccountCreation_001 = /* processName */include$2[0];

var AccountCreation_002 = /* dataEq */include$2[1];

var AccountCreation_007 = /* Denied */include$2[6];

var AccountCreation_008 = /* Aborted */include$2[7];

var AccountCreation = /* module */[
  /* Data */Data$2,
  AccountCreation_001,
  AccountCreation_002,
  /* Proposed */Proposed$2,
  /* Rejected */Rejected$2,
  /* Endorsed */Endorsed$2,
  /* Accepted */Accepted$2,
  AccountCreation_007,
  AccountCreation_008
];

function encode$5($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "partnerId",
                PrimitiveTypes.UserId[/* encode */2]($$event[/* partnerId */0])
              ],
              /* :: */[
                /* tuple */[
                  "partnerApprovalProcess",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* partnerApprovalProcess */1])
                ],
                /* :: */[
                  /* tuple */[
                    "lastCustodianRemovalProcess",
                    Json_encode.nullable(PrimitiveTypes.ProcessId[/* encode */2], $$event[/* lastCustodianRemovalProcess */2])
                  ],
                  /* :: */[
                    /* tuple */[
                      "accountIdx",
                      WalletTypes.AccountIndex[/* encode */4]($$event[/* accountIdx */3])
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function decode$5(raw) {
  var partial_arg = PrimitiveTypes.ProcessId[/* decode */3];
  return /* record */[
          /* partnerId */Json_decode.field("partnerId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* partnerApprovalProcess */Json_decode.field("partnerApprovalProcess", PrimitiveTypes.ProcessId[/* decode */3], raw),
          /* lastCustodianRemovalProcess */Json_decode.field("lastCustodianRemovalProcess", (function (param) {
                  return Json_decode.optional(partial_arg, param);
                }), raw),
          /* accountIdx */Json_decode.field("accountIdx", WalletTypes.AccountIndex[/* decode */5], raw)
        ];
}

var Data$3 = /* module */[
  /* encode */encode$5,
  /* decode */decode$5
];

var include$3 = EventTypes.makeProcess("Custodian")(Data$3);

var Proposed$3 = include$3[2];

var Rejected$3 = include$3[3];

var Endorsed$3 = include$3[4];

var Accepted$3 = include$3[5];

var Denied$2 = include$3[6];

function encode$6($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "custodianId",
                PrimitiveTypes.UserId[/* encode */2]($$event[/* custodianId */0])
              ],
              /* :: */[
                /* tuple */[
                  "accountIdx",
                  WalletTypes.AccountIndex[/* encode */4]($$event[/* accountIdx */1])
                ],
                /* :: */[
                  /* tuple */[
                    "lastCustodianProcess",
                    PrimitiveTypes.ProcessId[/* encode */2]($$event[/* lastCustodianProcess */2])
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decode$6(raw) {
  return /* record */[
          /* custodianId */Json_decode.field("custodianId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* accountIdx */Json_decode.field("accountIdx", WalletTypes.AccountIndex[/* decode */5], raw),
          /* lastCustodianProcess */Json_decode.field("lastCustodianProcess", PrimitiveTypes.ProcessId[/* decode */3], raw)
        ];
}

var Data$4 = /* module */[
  /* encode */encode$6,
  /* decode */decode$6
];

var include$4 = EventTypes.makeProcess("CustodianRemoval")(Data$4);

var Proposed$4 = include$4[2];

var Rejected$4 = include$4[3];

var Endorsed$4 = include$4[4];

var Accepted$4 = include$4[5];

var Denied$3 = include$4[6];

var Removal_001$1 = /* processName */include$4[0];

var Removal_002$1 = /* dataEq */include$4[1];

var Removal_008$1 = /* Aborted */include$4[7];

var Removal$1 = /* module */[
  /* Data */Data$4,
  Removal_001$1,
  Removal_002$1,
  /* Proposed */Proposed$4,
  /* Rejected */Rejected$4,
  /* Endorsed */Endorsed$4,
  /* Accepted */Accepted$4,
  /* Denied */Denied$3,
  Removal_008$1
];

var Custodian_001 = /* processName */include$3[0];

var Custodian_002 = /* dataEq */include$3[1];

var Custodian_008 = /* Aborted */include$3[7];

var Custodian = /* module */[
  /* Data */Data$3,
  Custodian_001,
  Custodian_002,
  /* Proposed */Proposed$3,
  /* Rejected */Rejected$3,
  /* Endorsed */Endorsed$3,
  /* Accepted */Accepted$3,
  /* Denied */Denied$2,
  Custodian_008,
  /* Removal */Removal$1
];

function encode$7($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "accountIdx",
                WalletTypes.AccountIndex[/* encode */4]($$event[/* accountIdx */0])
              ],
              /* :: */[
                /* tuple */[
                  "payoutTx",
                  PayoutTransaction.encode($$event[/* payoutTx */1])
                ],
                /* [] */0
              ]
            ]);
}

function decode$7(raw) {
  return /* record */[
          /* accountIdx */Json_decode.field("accountIdx", WalletTypes.AccountIndex[/* decode */5], raw),
          /* payoutTx */Json_decode.field("payoutTx", PayoutTransaction.decode, raw)
        ];
}

var Data$5 = /* module */[
  /* encode */encode$7,
  /* decode */decode$7
];

var include$5 = EventTypes.makeProcess("Payout")(Data$5);

var Proposed$5 = include$5[2];

var Rejected$5 = include$5[3];

var Endorsed$5 = include$5[4];

var Accepted$5 = include$5[5];

var Denied$4 = include$5[6];

var Aborted = include$5[7];

function make$2(processId, custodianId, payoutTx) {
  return /* record */[
          /* processId */processId,
          /* custodianId */custodianId,
          /* payoutTx */payoutTx
        ];
}

function encode$8($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "PayoutSigned"
              ],
              /* :: */[
                /* tuple */[
                  "processId",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                ],
                /* :: */[
                  /* tuple */[
                    "custodianId",
                    PrimitiveTypes.UserId[/* encode */2]($$event[/* custodianId */1])
                  ],
                  /* :: */[
                    /* tuple */[
                      "payoutTx",
                      PayoutTransaction.encode($$event[/* payoutTx */2])
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function decode$8(raw) {
  return /* record */[
          /* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw),
          /* custodianId */Json_decode.field("custodianId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* payoutTx */Json_decode.field("payoutTx", PayoutTransaction.decode, raw)
        ];
}

var Signed = /* module */[
  /* make */make$2,
  /* encode */encode$8,
  /* decode */decode$8
];

function make$3(processId, txId, payoutTx) {
  return /* record */[
          /* processId */processId,
          /* txId */txId,
          /* payoutTx */payoutTx
        ];
}

function encode$9($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "PayoutFinalized"
              ],
              /* :: */[
                /* tuple */[
                  "processId",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                ],
                /* :: */[
                  /* tuple */[
                    "txId",
                    $$event[/* txId */1]
                  ],
                  /* :: */[
                    /* tuple */[
                      "payoutTx",
                      PayoutTransaction.encode($$event[/* payoutTx */2])
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function decode$9(raw) {
  return /* record */[
          /* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw),
          /* txId */Json_decode.field("txId", Json_decode.string, raw),
          /* payoutTx */Json_decode.field("payoutTx", PayoutTransaction.decode, raw)
        ];
}

var Finalized = /* module */[
  /* make */make$3,
  /* encode */encode$9,
  /* decode */decode$9
];

function make$4(processId, txId) {
  return /* record */[
          /* processId */processId,
          /* txId */txId
        ];
}

function encode$10($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "PayoutBroadcast"
              ],
              /* :: */[
                /* tuple */[
                  "processId",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                ],
                /* :: */[
                  /* tuple */[
                    "txId",
                    $$event[/* txId */1]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decode$10(raw) {
  return /* record */[
          /* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw),
          /* txId */Json_decode.field("txId", Json_decode.string, raw)
        ];
}

var Broadcast = /* module */[
  /* make */make$4,
  /* encode */encode$10,
  /* decode */decode$10
];

function make$5(processId) {
  return /* record */[/* processId */processId];
}

function encode$11($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "PayoutBroadcastDuplicate"
              ],
              /* :: */[
                /* tuple */[
                  "processId",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                ],
                /* [] */0
              ]
            ]);
}

function decode$11(raw) {
  return /* record */[/* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw)];
}

var BroadcastDuplicate = /* module */[
  /* make */make$5,
  /* encode */encode$11,
  /* decode */decode$11
];

function make$6(processId, errorMessage) {
  return /* record */[
          /* processId */processId,
          /* errorMessage */errorMessage
        ];
}

function encode$12($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "PayoutBroadcastFailed"
              ],
              /* :: */[
                /* tuple */[
                  "processId",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                ],
                /* :: */[
                  /* tuple */[
                    "errorMessage",
                    $$event[/* errorMessage */1]
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decode$12(raw) {
  return /* record */[
          /* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw),
          /* errorMessage */Json_decode.field("errorMessage", Json_decode.string, raw)
        ];
}

var BroadcastFailed = /* module */[
  /* make */make$6,
  /* encode */encode$12,
  /* decode */decode$12
];

var Payout_001 = /* processName */include$5[0];

var Payout_002 = /* dataEq */include$5[1];

var Payout = /* module */[
  /* Data */Data$5,
  Payout_001,
  Payout_002,
  /* Proposed */Proposed$5,
  /* Rejected */Rejected$5,
  /* Endorsed */Endorsed$5,
  /* Accepted */Accepted$5,
  /* Denied */Denied$4,
  /* Aborted */Aborted,
  /* Signed */Signed,
  /* Finalized */Finalized,
  /* Broadcast */Broadcast,
  /* BroadcastDuplicate */BroadcastDuplicate,
  /* BroadcastFailed */BroadcastFailed
];

function make$7(custodianApprovalProcess, custodianId, keyChain) {
  return /* record */[
          /* custodianApprovalProcess */custodianApprovalProcess,
          /* custodianId */custodianId,
          /* keyChain */keyChain
        ];
}

function encode$13($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "CustodianKeyChainUpdated"
              ],
              /* :: */[
                /* tuple */[
                  "custodianApprovalProcess",
                  PrimitiveTypes.ProcessId[/* encode */2]($$event[/* custodianApprovalProcess */0])
                ],
                /* :: */[
                  /* tuple */[
                    "custodianId",
                    PrimitiveTypes.UserId[/* encode */2]($$event[/* custodianId */1])
                  ],
                  /* :: */[
                    /* tuple */[
                      "keyChain",
                      CustodianKeyChain.encode($$event[/* keyChain */2])
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function decode$13(raw) {
  return /* record */[
          /* custodianApprovalProcess */Json_decode.field("custodianApprovalProcess", PrimitiveTypes.ProcessId[/* decode */3], raw),
          /* custodianId */Json_decode.field("custodianId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* keyChain */Json_decode.field("keyChain", CustodianKeyChain.decode, raw)
        ];
}

var CustodianKeyChainUpdated = /* module */[
  /* make */make$7,
  /* encode */encode$13,
  /* decode */decode$13
];

function make$8(keyChain) {
  return /* record */[/* keyChain */keyChain];
}

function encode$14($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "AccountKeyChainIdentified"
              ],
              /* :: */[
                /* tuple */[
                  "keyChain",
                  AccountKeyChain.encode($$event[/* keyChain */0])
                ],
                /* [] */0
              ]
            ]);
}

function decode$14(raw) {
  return /* record */[/* keyChain */Json_decode.field("keyChain", AccountKeyChain.decode, raw)];
}

var AccountKeyChainIdentified = /* module */[
  /* make */make$8,
  /* encode */encode$14,
  /* decode */decode$14
];

function make$9(accountIdx, custodianId, identifier, sequence) {
  return /* record */[
          /* accountIdx */accountIdx,
          /* custodianId */custodianId,
          /* identifier */identifier,
          /* sequence */sequence
        ];
}

function encode$15($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "AccountKeyChainActivated"
              ],
              /* :: */[
                /* tuple */[
                  "accountIdx",
                  WalletTypes.AccountIndex[/* encode */4]($$event[/* accountIdx */0])
                ],
                /* :: */[
                  /* tuple */[
                    "custodianId",
                    PrimitiveTypes.UserId[/* encode */2]($$event[/* custodianId */1])
                  ],
                  /* :: */[
                    /* tuple */[
                      "identifier",
                      AccountKeyChain.Identifier[/* encode */0]($$event[/* identifier */2])
                    ],
                    /* :: */[
                      /* tuple */[
                        "sequence",
                        $$event[/* sequence */3]
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]);
}

function decode$15(raw) {
  return /* record */[
          /* accountIdx */Json_decode.field("accountIdx", WalletTypes.AccountIndex[/* decode */5], raw),
          /* custodianId */Json_decode.field("custodianId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* identifier */Json_decode.field("identifier", AccountKeyChain.Identifier[/* decode */1], raw),
          /* sequence */Json_decode.field("sequence", Json_decode.$$int, raw)
        ];
}

var AccountKeyChainActivated = /* module */[
  /* make */make$9,
  /* encode */encode$15,
  /* decode */decode$15
];

function make$10(partnerId, address) {
  return /* record */[
          /* partnerId */partnerId,
          /* address */address
        ];
}

function encode$16($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "IncomeAddressExposed"
              ],
              /* :: */[
                /* tuple */[
                  "partnerId",
                  PrimitiveTypes.UserId[/* encode */2]($$event[/* partnerId */0])
                ],
                /* :: */[
                  /* tuple */[
                    "address",
                    Address.encode($$event[/* address */1])
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

function decode$16(raw) {
  return /* record */[
          /* partnerId */Json_decode.field("partnerId", PrimitiveTypes.UserId[/* decode */3], raw),
          /* address */Json_decode.field("address", Address.decode, raw)
        ];
}

var AddressExposed = /* module */[
  /* make */make$10,
  /* encode */encode$16,
  /* decode */decode$16
];

function make$11(txOutputN, coordinates, address, txId, amount) {
  return /* record */[
          /* address */address,
          /* coordinates */coordinates,
          /* txId */txId,
          /* txOutputN */txOutputN,
          /* amount */amount
        ];
}

function encode$17($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "IncomeDetected"
              ],
              /* :: */[
                /* tuple */[
                  "address",
                  $$event[/* address */0]
                ],
                /* :: */[
                  /* tuple */[
                    "txId",
                    $$event[/* txId */2]
                  ],
                  /* :: */[
                    /* tuple */[
                      "txOutputN",
                      $$event[/* txOutputN */3]
                    ],
                    /* :: */[
                      /* tuple */[
                        "coordinates",
                        Address.Coordinates[/* encode */9]($$event[/* coordinates */1])
                      ],
                      /* :: */[
                        /* tuple */[
                          "amount",
                          BTC.encode($$event[/* amount */4])
                        ],
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function decode$17(raw) {
  return /* record */[
          /* address */Json_decode.field("address", Json_decode.string, raw),
          /* coordinates */Json_decode.field("coordinates", Address.Coordinates[/* decode */10], raw),
          /* txId */Json_decode.field("txId", Json_decode.string, raw),
          /* txOutputN */Json_decode.field("txOutputN", Json_decode.$$int, raw),
          /* amount */Json_decode.field("amount", BTC.decode, raw)
        ];
}

var Detected = /* module */[
  /* make */make$11,
  /* encode */encode$17,
  /* decode */decode$17
];

function make$12(input) {
  return /* record */[/* input */input];
}

function encode$18($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "IncomeUnlocked"
              ],
              /* :: */[
                /* tuple */[
                  "input",
                  Network.encodeInput($$event[/* input */0])
                ],
                /* [] */0
              ]
            ]);
}

function decode$18(raw) {
  return /* record */[/* input */Json_decode.field("input", Network.decodeInput, raw)];
}

var Unlocked = /* module */[
  /* make */make$12,
  /* encode */encode$18,
  /* decode */decode$18
];

var Income = /* module */[
  /* AddressExposed */AddressExposed,
  /* Detected */Detected,
  /* Unlocked */Unlocked
];

function make$13(txId, blockHeight, unixTime) {
  return /* record */[
          /* txId */txId,
          /* blockHeight */blockHeight,
          /* unixTime */unixTime
        ];
}

function encode$19($$event) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "type",
                "TransactionConfirmed"
              ],
              /* :: */[
                /* tuple */[
                  "txId",
                  $$event[/* txId */0]
                ],
                /* :: */[
                  /* tuple */[
                    "blockHeight",
                    Utils.encodeFloat($$event[/* blockHeight */1])
                  ],
                  /* :: */[
                    /* tuple */[
                      "unixTime",
                      Utils.encodeFloat($$event[/* unixTime */2])
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function decode$19(raw) {
  return /* record */[
          /* txId */Json_decode.field("txId", Json_decode.string, raw),
          /* blockHeight */Json_decode.field("blockHeight", Utils.decodeFloat, raw),
          /* unixTime */Json_decode.field("unixTime", Utils.decodeFloat, raw)
        ];
}

var Confirmed = /* module */[
  /* make */make$13,
  /* encode */encode$19,
  /* decode */decode$19
];

var Transaction = /* module */[/* Confirmed */Confirmed];

var BadData = Caml_exceptions.create("Event.BadData");

function makePartnerProposed(prospectPubKey, eligibleWhenProposing, proposerId, prospectId, lastRemovalAccepted, policy, param) {
  var lastPartnerRemovalProcess = Utils.mapOption((function (param) {
          if (PrimitiveTypes.UserId[/* neq */6](param[/* data */2][/* id */0], prospectId)) {
            throw [
                  BadData,
                  "The provided PartnerRemovalAccepted wasn't for the same partner"
                ];
          }
          return param[/* processId */0];
        }), lastRemovalAccepted);
  var dependsOnCompletions = Js_option.getWithDefault(/* array */[], Utils.mapOption((function (p) {
              return /* array */[p];
            }), lastPartnerRemovalProcess));
  return /* PartnerProposed */Block.__(1, [Curry._6(Proposed[/* make */0], undefined, Caml_option.some(Belt_Set.mergeMany(PrimitiveTypes.ProcessId[/* emptySet */9], dependsOnCompletions)), eligibleWhenProposing, proposerId, policy, /* record */[
                  /* lastPartnerRemovalProcess */lastPartnerRemovalProcess,
                  /* id */prospectId,
                  /* pubKey */prospectPubKey
                ])]);
}

function makePartnerRemovalProposed(eligibleWhenProposing, lastPartnerAccepted, proposerId, policy) {
  return /* PartnerRemovalProposed */Block.__(7, [Curry._6(Proposed$1[/* make */0], undefined, Caml_option.some(Belt_Set.mergeMany(PrimitiveTypes.ProcessId[/* emptySet */9], /* array */[lastPartnerAccepted[/* processId */0]])), eligibleWhenProposing, proposerId, policy, /* record */[
                  /* id */lastPartnerAccepted[/* data */2][/* id */1],
                  /* lastPartnerProcess */lastPartnerAccepted[/* processId */0]
                ])]);
}

function makeAccountCreationProposed(eligibleWhenProposing, proposerId, name, accountIdx, accountSettings, policy) {
  return /* AccountCreationProposed */Block.__(12, [Curry._6(Proposed$2[/* make */0], undefined, undefined, eligibleWhenProposing, proposerId, policy, /* record */[
                  /* accountIdx */accountIdx,
                  /* settings */accountSettings,
                  /* name */name
                ])]);
}

function makeCustodianProposed(eligibleWhenProposing, lastCustodianRemovalAccepted, partnerProposed, proposerId, accountIdx, policy) {
  var partnerId = partnerProposed[/* data */6][/* id */1];
  var partnerApprovalProcess = partnerProposed[/* processId */0];
  var lastCustodianRemovalProcess = Utils.mapOption((function (param) {
          if (PrimitiveTypes.UserId[/* neq */6](param[/* data */2][/* custodianId */0], partnerId)) {
            throw [
                  BadData,
                  "The provided CustodianRemovalAccepted wasn't for the same custodian"
                ];
          }
          return param[/* processId */0];
        }), lastCustodianRemovalAccepted);
  return /* CustodianProposed */Block.__(16, [Curry._6(Proposed$3[/* make */0], Caml_option.some(Belt_Set.mergeMany(PrimitiveTypes.ProcessId[/* emptySet */9], /* array */[partnerApprovalProcess])), undefined, eligibleWhenProposing, proposerId, policy, /* record */[
                  /* partnerId */partnerId,
                  /* partnerApprovalProcess */partnerApprovalProcess,
                  /* lastCustodianRemovalProcess */lastCustodianRemovalProcess,
                  /* accountIdx */accountIdx
                ])]);
}

function makeCustodianRemovalProposed(eligibleWhenProposing, custodianAccepted, proposerId, accountIdx, policy) {
  var lastCustodianProcess = custodianAccepted[/* processId */0];
  return /* CustodianRemovalProposed */Block.__(21, [Curry._6(Proposed$4[/* make */0], undefined, Caml_option.some(Belt_Set.mergeMany(PrimitiveTypes.ProcessId[/* emptySet */9], /* array */[lastCustodianProcess])), eligibleWhenProposing, proposerId, policy, /* record */[
                  /* custodianId */custodianAccepted[/* data */2][/* partnerId */0],
                  /* accountIdx */accountIdx,
                  /* lastCustodianProcess */lastCustodianProcess
                ])]);
}

function makePartnerRejected(processId, rejectorId) {
  return /* PartnerRejected */Block.__(2, [Curry._2(Rejected[/* make */0], processId, rejectorId)]);
}

function makePartnerEndorsed(processId, supporterId) {
  return /* PartnerEndorsed */Block.__(3, [Curry._2(Endorsed[/* make */0], processId, supporterId)]);
}

function makePartnerRemovalRejected(processId, rejectorId) {
  return /* PartnerRemovalRejected */Block.__(8, [Curry._2(Rejected$1[/* make */0], processId, rejectorId)]);
}

function makePartnerRemovalEndorsed(processId, supporterId) {
  return /* PartnerRemovalEndorsed */Block.__(9, [Curry._2(Endorsed$1[/* make */0], processId, supporterId)]);
}

function makeAccountCreationEndorsed(processId, supporterId) {
  return /* AccountCreationEndorsed */Block.__(14, [Curry._2(Endorsed$2[/* make */0], processId, supporterId)]);
}

function makeCustodianRejected(processId, rejectorId) {
  return /* CustodianRejected */Block.__(17, [Curry._2(Rejected$3[/* make */0], processId, rejectorId)]);
}

function makeCustodianEndorsed(processId, supporterId) {
  return /* CustodianEndorsed */Block.__(18, [Curry._2(Endorsed$3[/* make */0], processId, supporterId)]);
}

function makeCustodianRemovalEndorsed(processId, supporterId) {
  return /* CustodianRemovalEndorsed */Block.__(23, [Curry._2(Endorsed$4[/* make */0], processId, supporterId)]);
}

function makePayoutEndorsed(processId, supporterId) {
  return /* PayoutEndorsed */Block.__(28, [Curry._2(Endorsed$5[/* make */0], processId, supporterId)]);
}

function makePayoutRejected(processId, rejectorId) {
  return /* PayoutRejected */Block.__(27, [Curry._2(Rejected$5[/* make */0], processId, rejectorId)]);
}

function encode$20(param) {
  switch (param.tag | 0) {
    case 0 : 
        return encode(param[0]);
    case 1 : 
        return Curry._1(Proposed[/* encode */1], param[0]);
    case 2 : 
        return Curry._1(Rejected[/* encode */1], param[0]);
    case 3 : 
        return Curry._1(Endorsed[/* encode */1], param[0]);
    case 4 : 
        return Curry._1(Accepted[/* encode */1], param[0]);
    case 5 : 
        return Curry._1(Denied[/* encode */1], param[0]);
    case 6 : 
        return encode$3(param[0]);
    case 7 : 
        return Curry._1(Proposed$1[/* encode */1], param[0]);
    case 8 : 
        return Curry._1(Rejected$1[/* encode */1], param[0]);
    case 9 : 
        return Curry._1(Endorsed$1[/* encode */1], param[0]);
    case 10 : 
        return Curry._1(Accepted$1[/* encode */1], param[0]);
    case 11 : 
        return Curry._1(Denied$1[/* encode */1], param[0]);
    case 12 : 
        return Curry._1(Proposed$2[/* encode */1], param[0]);
    case 13 : 
        return Curry._1(Rejected$2[/* encode */1], param[0]);
    case 14 : 
        return Curry._1(Endorsed$2[/* encode */1], param[0]);
    case 15 : 
        return Curry._1(Accepted$2[/* encode */1], param[0]);
    case 16 : 
        return Curry._1(Proposed$3[/* encode */1], param[0]);
    case 17 : 
        return Curry._1(Rejected$3[/* encode */1], param[0]);
    case 18 : 
        return Curry._1(Endorsed$3[/* encode */1], param[0]);
    case 19 : 
        return Curry._1(Accepted$3[/* encode */1], param[0]);
    case 20 : 
        return Curry._1(Denied$2[/* encode */1], param[0]);
    case 21 : 
        return Curry._1(Proposed$4[/* encode */1], param[0]);
    case 22 : 
        return Curry._1(Rejected$4[/* encode */1], param[0]);
    case 23 : 
        return Curry._1(Endorsed$4[/* encode */1], param[0]);
    case 24 : 
        return Curry._1(Accepted$4[/* encode */1], param[0]);
    case 25 : 
        return Curry._1(Denied$3[/* encode */1], param[0]);
    case 26 : 
        return Curry._1(Proposed$5[/* encode */1], param[0]);
    case 27 : 
        return Curry._1(Rejected$5[/* encode */1], param[0]);
    case 28 : 
        return Curry._1(Endorsed$5[/* encode */1], param[0]);
    case 29 : 
        return Curry._1(Accepted$5[/* encode */1], param[0]);
    case 30 : 
        return Curry._1(Aborted[/* encode */1], param[0]);
    case 31 : 
        return Curry._1(Denied$4[/* encode */1], param[0]);
    case 32 : 
        return encode$8(param[0]);
    case 33 : 
        return encode$9(param[0]);
    case 34 : 
        return encode$10(param[0]);
    case 35 : 
        return encode$11(param[0]);
    case 36 : 
        return encode$12(param[0]);
    case 37 : 
        return encode$13(param[0]);
    case 38 : 
        return encode$14(param[0]);
    case 39 : 
        return encode$15(param[0]);
    case 40 : 
        return encode$16(param[0]);
    case 41 : 
        return encode$17(param[0]);
    case 42 : 
        return encode$18(param[0]);
    case 43 : 
        return encode$19(param[0]);
    
  }
}

function isSystemEvent(param) {
  switch (param.tag | 0) {
    case 4 : 
    case 5 : 
    case 10 : 
    case 11 : 
    case 15 : 
    case 19 : 
    case 20 : 
    case 24 : 
    case 25 : 
    case 29 : 
    case 30 : 
    case 31 : 
    case 33 : 
    case 34 : 
    case 35 : 
    case 36 : 
    case 38 : 
    case 41 : 
    case 42 : 
    case 43 : 
        return true;
    default:
      return false;
  }
}

var UnknownEvent = Caml_exceptions.create("Event.UnknownEvent");

function decode$20(raw) {
  var type_ = Json_decode.field("type", Json_decode.string, raw);
  switch (type_) {
    case "AccountCreationAccepted" : 
        return /* AccountCreationAccepted */Block.__(15, [Curry._1(Accepted$2[/* decode */2], raw)]);
    case "AccountCreationEndorsed" : 
        return /* AccountCreationEndorsed */Block.__(14, [Curry._1(Endorsed$2[/* decode */2], raw)]);
    case "AccountCreationProposed" : 
        return /* AccountCreationProposed */Block.__(12, [Curry._1(Proposed$2[/* decode */2], raw)]);
    case "AccountCreationRejected" : 
        return /* AccountCreationRejected */Block.__(13, [Curry._1(Rejected$2[/* decode */2], raw)]);
    case "AccountKeyChainActivated" : 
        return /* AccountKeyChainActivated */Block.__(39, [decode$15(raw)]);
    case "AccountKeyChainIdentified" : 
        return /* AccountKeyChainIdentified */Block.__(38, [decode$14(raw)]);
    case "CustodianAccepted" : 
        return /* CustodianAccepted */Block.__(19, [Curry._1(Accepted$3[/* decode */2], raw)]);
    case "CustodianDenied" : 
        return /* CustodianDenied */Block.__(20, [Curry._1(Denied$2[/* decode */2], raw)]);
    case "CustodianEndorsed" : 
        return /* CustodianEndorsed */Block.__(18, [Curry._1(Endorsed$3[/* decode */2], raw)]);
    case "CustodianKeyChainUpdated" : 
        return /* CustodianKeyChainUpdated */Block.__(37, [decode$13(raw)]);
    case "CustodianProposed" : 
        return /* CustodianProposed */Block.__(16, [Curry._1(Proposed$3[/* decode */2], raw)]);
    case "CustodianRejected" : 
        return /* CustodianRejected */Block.__(17, [Curry._1(Rejected$3[/* decode */2], raw)]);
    case "CustodianRemovalAccepted" : 
        return /* CustodianRemovalAccepted */Block.__(24, [Curry._1(Accepted$4[/* decode */2], raw)]);
    case "CustodianRemovalDenied" : 
        return /* CustodianRemovalDenied */Block.__(25, [Curry._1(Denied$3[/* decode */2], raw)]);
    case "CustodianRemovalEndorsed" : 
        return /* CustodianRemovalEndorsed */Block.__(23, [Curry._1(Endorsed$4[/* decode */2], raw)]);
    case "CustodianRemovalProposed" : 
        return /* CustodianRemovalProposed */Block.__(21, [Curry._1(Proposed$4[/* decode */2], raw)]);
    case "CustodianRemovalRejected" : 
        return /* CustodianRemovalRejected */Block.__(22, [Curry._1(Rejected$4[/* decode */2], raw)]);
    case "IncomeAddressExposed" : 
        return /* IncomeAddressExposed */Block.__(40, [decode$16(raw)]);
    case "IncomeDetected" : 
        return /* IncomeDetected */Block.__(41, [decode$17(raw)]);
    case "IncomeUnlocked" : 
        return /* IncomeUnlocked */Block.__(42, [decode$18(raw)]);
    case "PartnerAccepted" : 
        return /* PartnerAccepted */Block.__(4, [Curry._1(Accepted[/* decode */2], raw)]);
    case "PartnerDenied" : 
        return /* PartnerDenied */Block.__(5, [Curry._1(Denied[/* decode */2], raw)]);
    case "PartnerEndorsed" : 
        return /* PartnerEndorsed */Block.__(3, [Curry._1(Endorsed[/* decode */2], raw)]);
    case "PartnerProposed" : 
        return /* PartnerProposed */Block.__(1, [Curry._1(Proposed[/* decode */2], raw)]);
    case "PartnerPubKeyAdded" : 
        return /* PartnerPubKeyAdded */Block.__(6, [decode$3(raw)]);
    case "PartnerRejected" : 
        return /* PartnerRejected */Block.__(2, [Curry._1(Rejected[/* decode */2], raw)]);
    case "PartnerRemovalAccepted" : 
        return /* PartnerRemovalAccepted */Block.__(10, [Curry._1(Accepted$1[/* decode */2], raw)]);
    case "PartnerRemovalDenied" : 
        return /* PartnerRemovalDenied */Block.__(11, [Curry._1(Denied$1[/* decode */2], raw)]);
    case "PartnerRemovalEndorsed" : 
        return /* PartnerRemovalEndorsed */Block.__(9, [Curry._1(Endorsed$1[/* decode */2], raw)]);
    case "PartnerRemovalProposed" : 
        return /* PartnerRemovalProposed */Block.__(7, [Curry._1(Proposed$1[/* decode */2], raw)]);
    case "PartnerRemovalRejected" : 
        return /* PartnerRemovalRejected */Block.__(8, [Curry._1(Rejected$1[/* decode */2], raw)]);
    case "PayoutAborted" : 
        return /* PayoutAborted */Block.__(30, [Curry._1(Aborted[/* decode */2], raw)]);
    case "PayoutAccepted" : 
        return /* PayoutAccepted */Block.__(29, [Curry._1(Accepted$5[/* decode */2], raw)]);
    case "PayoutBroadcast" : 
        return /* PayoutBroadcast */Block.__(34, [decode$10(raw)]);
    case "PayoutBroadcastDuplicate" : 
        return /* PayoutBroadcastDuplicate */Block.__(35, [decode$11(raw)]);
    case "PayoutBroadcastFailed" : 
        return /* PayoutBroadcastFailed */Block.__(36, [decode$12(raw)]);
    case "PayoutDenied" : 
        return /* PayoutDenied */Block.__(31, [Curry._1(Denied$4[/* decode */2], raw)]);
    case "PayoutEndorsed" : 
        return /* PayoutEndorsed */Block.__(28, [Curry._1(Endorsed$5[/* decode */2], raw)]);
    case "PayoutFinalized" : 
        return /* PayoutFinalized */Block.__(33, [decode$9(raw)]);
    case "PayoutProposed" : 
        return /* PayoutProposed */Block.__(26, [Curry._1(Proposed$5[/* decode */2], raw)]);
    case "PayoutRejected" : 
        return /* PayoutRejected */Block.__(27, [Curry._1(Rejected$5[/* decode */2], raw)]);
    case "PayoutSigned" : 
        return /* PayoutSigned */Block.__(32, [decode$8(raw)]);
    case "TransactionConfirmed" : 
        return /* TransactionConfirmed */Block.__(43, [decode$19(raw)]);
    case "VentureCreated" : 
        return /* VentureCreated */Block.__(0, [decode(raw)]);
    default:
      throw [
            UnknownEvent,
            raw
          ];
  }
}

function getIncomeAddressExposedExn($$event) {
  if ($$event.tag === 40) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getIncomeAddressExposedExn");
  }
}

function getAccountKeyChainIdentifiedExn($$event) {
  if ($$event.tag === 38) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getAccountKeyChainIdentifiedExn");
  }
}

function getAccountKeyChainActivatedExn($$event) {
  if ($$event.tag === 39) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getAccountKeyChainActivatedExn");
  }
}

function getCustodianKeyChainUpdatedExn($$event) {
  if ($$event.tag === 37) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getCustodianKeyChainUpdatedExn");
  }
}

function getPayoutBroadcastFailedExn($$event) {
  if ($$event.tag === 36) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPayoutBroadcastFailedExn");
  }
}

function getPayoutBroadcastExn($$event) {
  if ($$event.tag === 34) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPayoutBroadcastExn");
  }
}

function getPayoutSignedExn($$event) {
  if ($$event.tag === 32) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPayoutSignedExn");
  }
}

function getPayoutAcceptedExn($$event) {
  if ($$event.tag === 29) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPayoutAcceptedExn");
  }
}

function getPayoutEndorsedExn($$event) {
  if ($$event.tag === 28) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPayoutEndorsedExn");
  }
}

function getPayoutProposedExn($$event) {
  if ($$event.tag === 26) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPayoutProposedExn");
  }
}

function getCustodianAcceptedExn($$event) {
  if ($$event.tag === 19) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getCustodianAcceptedExn");
  }
}

function getCustodianEndorsedExn($$event) {
  if ($$event.tag === 18) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getCustodianEndorsedExn");
  }
}

function getCustodianRejectedExn($$event) {
  if ($$event.tag === 17) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getCustodianRejectedExn");
  }
}

function getCustodianProposedExn($$event) {
  if ($$event.tag === 16) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getCustodianProposedExn");
  }
}

function getAccountCreationAcceptedExn($$event) {
  if ($$event.tag === 15) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getAccountCreationAcceptedExn");
  }
}

function getAccountCreationEndorsedExn($$event) {
  if ($$event.tag === 14) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getAccountCreationEndorsedExn");
  }
}

function getAccountCreationProposedExn($$event) {
  if ($$event.tag === 12) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getAccountCreationProposedExn");
  }
}

function getPartnerAcceptedExn($$event) {
  if ($$event.tag === 4) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPartnerAcceptedExn");
  }
}

function getPartnerRejectedExn($$event) {
  if ($$event.tag === 2) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPartnerRejectedExn");
  }
}

function getPartnerEndorsedExn($$event) {
  if ($$event.tag === 3) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPartnerEndorsedExn");
  }
}

function getPartnerProposedExn($$event) {
  if ($$event.tag === 1) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPartnerProposedExn");
  }
}

function getPartnerRemovalAcceptedExn($$event) {
  if ($$event.tag === 10) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPartnerRemovalAcceptedExn");
  }
}

function getPartnerRemovalEndorsedExn($$event) {
  if ($$event.tag === 9) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPartnerRemovalEndorsedExn");
  }
}

function getPartnerRemovalProposedExn($$event) {
  if ($$event.tag === 7) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getPartnerRemovalProposedExn");
  }
}

function getCustodianRemovalProposedExn($$event) {
  if ($$event.tag === 21) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getCustodianRemovalProposedExn");
  }
}

function getCustodianRemovalEndorsedExn($$event) {
  if ($$event.tag === 23) {
    return $$event[0];
  } else {
    return Js_exn.raiseError("getCustodianRemovalEndorsedExn");
  }
}

function getVentureCreatedExn($$event) {
  if ($$event.tag) {
    return Js_exn.raiseError("getVentureCreatedExn");
  } else {
    return $$event[0];
  }
}

exports.VentureCreated = VentureCreated;
exports.Partner = Partner;
exports.AccountCreation = AccountCreation;
exports.Custodian = Custodian;
exports.Payout = Payout;
exports.CustodianKeyChainUpdated = CustodianKeyChainUpdated;
exports.AccountKeyChainIdentified = AccountKeyChainIdentified;
exports.AccountKeyChainActivated = AccountKeyChainActivated;
exports.Income = Income;
exports.Transaction = Transaction;
exports.BadData = BadData;
exports.makePartnerProposed = makePartnerProposed;
exports.makePartnerRemovalProposed = makePartnerRemovalProposed;
exports.makeAccountCreationProposed = makeAccountCreationProposed;
exports.makeCustodianProposed = makeCustodianProposed;
exports.makeCustodianRemovalProposed = makeCustodianRemovalProposed;
exports.makePartnerRejected = makePartnerRejected;
exports.makePartnerEndorsed = makePartnerEndorsed;
exports.makePartnerRemovalRejected = makePartnerRemovalRejected;
exports.makePartnerRemovalEndorsed = makePartnerRemovalEndorsed;
exports.makeAccountCreationEndorsed = makeAccountCreationEndorsed;
exports.makeCustodianRejected = makeCustodianRejected;
exports.makeCustodianEndorsed = makeCustodianEndorsed;
exports.makeCustodianRemovalEndorsed = makeCustodianRemovalEndorsed;
exports.makePayoutEndorsed = makePayoutEndorsed;
exports.makePayoutRejected = makePayoutRejected;
exports.encode = encode$20;
exports.isSystemEvent = isSystemEvent;
exports.UnknownEvent = UnknownEvent;
exports.decode = decode$20;
exports.getIncomeAddressExposedExn = getIncomeAddressExposedExn;
exports.getAccountKeyChainIdentifiedExn = getAccountKeyChainIdentifiedExn;
exports.getAccountKeyChainActivatedExn = getAccountKeyChainActivatedExn;
exports.getCustodianKeyChainUpdatedExn = getCustodianKeyChainUpdatedExn;
exports.getPayoutBroadcastFailedExn = getPayoutBroadcastFailedExn;
exports.getPayoutBroadcastExn = getPayoutBroadcastExn;
exports.getPayoutSignedExn = getPayoutSignedExn;
exports.getPayoutAcceptedExn = getPayoutAcceptedExn;
exports.getPayoutEndorsedExn = getPayoutEndorsedExn;
exports.getPayoutProposedExn = getPayoutProposedExn;
exports.getCustodianAcceptedExn = getCustodianAcceptedExn;
exports.getCustodianEndorsedExn = getCustodianEndorsedExn;
exports.getCustodianRejectedExn = getCustodianRejectedExn;
exports.getCustodianProposedExn = getCustodianProposedExn;
exports.getAccountCreationAcceptedExn = getAccountCreationAcceptedExn;
exports.getAccountCreationEndorsedExn = getAccountCreationEndorsedExn;
exports.getAccountCreationProposedExn = getAccountCreationProposedExn;
exports.getPartnerAcceptedExn = getPartnerAcceptedExn;
exports.getPartnerRejectedExn = getPartnerRejectedExn;
exports.getPartnerEndorsedExn = getPartnerEndorsedExn;
exports.getPartnerProposedExn = getPartnerProposedExn;
exports.getPartnerRemovalAcceptedExn = getPartnerRemovalAcceptedExn;
exports.getPartnerRemovalEndorsedExn = getPartnerRemovalEndorsedExn;
exports.getPartnerRemovalProposedExn = getPartnerRemovalProposedExn;
exports.getCustodianRemovalProposedExn = getCustodianRemovalProposedExn;
exports.getCustodianRemovalEndorsedExn = getCustodianRemovalEndorsedExn;
exports.getVentureCreatedExn = getVentureCreatedExn;
/* include Not a pure module */
