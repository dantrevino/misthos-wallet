// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Icons = require("../Icons.bs.js");
var Theme = require("../Theme.bs.js");
var Colors = require("../Colors.bs.js");
var ViewCommon = require("../ViewCommon.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var MaterialUi_Avatar = require("@jsiebern/bs-material-ui/src/MaterialUi_Avatar.bs.js");
var MaterialUi_ListItem = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItem.bs.js");
var MaterialUi_IconButton = require("@jsiebern/bs-material-ui/src/MaterialUi_IconButton.bs.js");
var MaterialUi_ListItemText = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItemText.bs.js");
var MaterialUi_ListItemSecondaryAction = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItemSecondaryAction.bs.js");

var component = ReasonReact.statelessComponent("AlertListItem");

var alert = Css.style(/* :: */[
      Css.borderStyle(Css.solid),
      /* :: */[
        Css.borderWidth(Css.px(2)),
        /* :: */[
          Css.unsafe("borderImageSlice", "1"),
          /* :: */[
            Css.unsafe("borderImageSource", Colors.uGradientAqua),
            /* :: */[
              Css.marginBottom(Css.px(Theme.space(1))),
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var icon = Css.style(/* :: */[
      Css.unsafe("width", "min-content"),
      /* :: */[
        Css.backgroundColor(/* transparent */582626130),
        /* [] */0
      ]
    ]);

var Styles = /* module */[
  /* alert */alert,
  /* icon */icon
];

function make(icon$1, onClick, primary, secondary, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var icon$2;
              switch (icon$1) {
                case 0 : 
                    icon$2 = Icons.plusCircle;
                    break;
                case 1 : 
                    icon$2 = Icons.minusCircle;
                    break;
                case 2 : 
                    icon$2 = Icons.arrowUpCircle;
                    break;
                
              }
              return ReasonReact.element(undefined, undefined, MaterialUi_ListItem.make(true, alert, undefined, undefined, undefined, true, undefined, undefined, undefined, undefined, undefined, undefined, undefined, onClick, undefined, undefined, /* array */[
                              ReasonReact.element(undefined, undefined, MaterialUi_Avatar.make(undefined, undefined, icon, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[icon$2])),
                              ReasonReact.element(undefined, undefined, MaterialUi_ListItemText.make(undefined, undefined, undefined, Caml_option.some(primary), undefined, secondary, undefined, undefined, undefined, /* array */[])),
                              ReasonReact.element(undefined, undefined, MaterialUi_ListItemSecondaryAction.make(undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, MaterialUi_IconButton.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, onClick, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[Icons.arrowRight]))]))
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

var ignoreEvent = ViewCommon.ignoreEvent;

exports.text = text;
exports.extractString = extractString;
exports.ignoreEvent = ignoreEvent;
exports.component = component;
exports.Styles = Styles;
exports.make = make;
/* component Not a pure module */
